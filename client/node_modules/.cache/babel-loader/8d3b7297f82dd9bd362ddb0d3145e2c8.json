{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/analytics\";\nconst config = {\n  apiKey: \"AIzaSyDDKgZ6NhU4l5RSK9G4OV6ypssZ6rv-yp0\",\n  authDomain: \"clothing-ecommerce-adf0b.firebaseapp.com\",\n  databaseURL: \"https://clothing-ecommerce-adf0b.firebaseio.com\",\n  projectId: \"clothing-ecommerce-adf0b\",\n  storageBucket: \"clothing-ecommerce-adf0b.appspot.com\",\n  messagingSenderId: \"666705959173\",\n  appId: \"1:666705959173:web:7b6babbf85d323c498bf6c\",\n  measurementId: \"G-7E6GS0P2QJ\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return; // console.log(userAuth);\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email,\n      emailVerified,\n      photoURL\n    } = userAuth;\n    const createdDate = new Date();\n\n    try {\n      userRef.set({\n        displayName,\n        email,\n        emailVerified,\n        photoURL,\n        createdDate,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"Error occured\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionSnapShotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routerName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const analytics = firebase.analytics();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["/Users/apple/Documents/work_place/react/clothing-ecommerce/client/src/components/firbase/firebase.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","emailVerified","photoURL","createdDate","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionSnapShotToMap","collections","transformedCollection","docs","map","title","items","data","routerName","encodeURI","toLowerCase","id","reduce","accumulator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","analytics","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/analytics\";\n\nconst config = {\n  apiKey: \"AIzaSyDDKgZ6NhU4l5RSK9G4OV6ypssZ6rv-yp0\",\n  authDomain: \"clothing-ecommerce-adf0b.firebaseapp.com\",\n  databaseURL: \"https://clothing-ecommerce-adf0b.firebaseio.com\",\n  projectId: \"clothing-ecommerce-adf0b\",\n  storageBucket: \"clothing-ecommerce-adf0b.appspot.com\",\n  messagingSenderId: \"666705959173\",\n  appId: \"1:666705959173:web:7b6babbf85d323c498bf6c\",\n  measurementId: \"G-7E6GS0P2QJ\"\n};\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  // console.log(userAuth);\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email, emailVerified, photoURL } = userAuth;\n    const createdDate = new Date();\n\n    try {\n      userRef.set({\n        displayName,\n        email,\n        emailVerified,\n        photoURL,\n        createdDate,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"Error occured\", error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const addCollectionAndDocuments = async (\n  collectionKey,\n  objectsToAdd\n) => {\n  const collectionRef = firestore.collection(collectionKey);\n\n  const batch = firestore.batch();\n\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n\n  return await batch.commit();\n};\n\nexport const convertCollectionSnapShotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const { title, items } = doc.data();\n\n    return {\n      routerName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const analytics = firebase.analytics();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}