{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/work_place/react/clothing-ecommerce/src/components/SignIn/SignIn.jsx\";\nimport React, { Component } from \"react\";\nimport \"./SignIn.scss\";\nimport FormInput from \"../FormInput/FormInput\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport { signInWithGoogle, auth } from \"../firbase/firebase\";\nimport { connect } from \"react-redux\";\nimport { googleSignInStart } from \"../../redux/user/user.actions\";\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: \"\",\n          password: \"\"\n        });\n      } catch (error) {\n        console.log(\"Error occured\", error);\n      }\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      label: \"Password\",\n      handleChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(CustomButton, {\n      type: \"submit\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Sign In With Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect()(SignIn);","map":{"version":3,"sources":["/Users/apple/Documents/work_place/react/clothing-ecommerce/src/components/SignIn/SignIn.jsx"],"names":["React","Component","FormInput","CustomButton","signInWithGoogle","auth","connect","googleSignInStart","SignIn","constructor","props","handleChange","event","name","value","target","setState","handleSubmit","preventDefault","email","password","state","signInWithEmailAndPassword","error","console","log","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./SignIn.scss\";\nimport FormInput from \"../FormInput/FormInput\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport { signInWithGoogle, auth } from \"../firbase/firebase\";\nimport { connect } from \"react-redux\";\nimport { googleSignInStart } from \"../../redux/user/user.actions\";\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    const { email, password } = this.state;\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      this.setState({\n        email: \"\",\n        password: \"\"\n      });\n    } catch (error) {\n      console.log(\"Error occured\", error);\n    }\n  };\n\n  render() {\n    const { googleSignInStart } = this.props;\n    return (\n      <div className=\"sign-in\">\n        <h2 className=\"title\">I already have an account</h2>\n        <span>Sign in with your email and password</span>\n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            label=\"Email\"\n            value={this.state.email}\n            handleChange={this.handleChange}\n            required\n          />\n          <FormInput\n            name=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            label=\"Password\"\n            handleChange={this.handleChange}\n            required\n          />\n\n          <div className=\"buttons\">\n            <CustomButton>Sign In</CustomButton>\n\n            <CustomButton\n              type=\"submit\"\n              onClick={googleSignInStart}\n              isGoogleSignIn\n            >\n              Sign In With Google\n            </CustomButton>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect()(SignIn);\n"]},"metadata":{},"sourceType":"module"}