{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/work_place/react/clothing-ecommerce/src/pages/ShopPage/ShopPage.jsx\";\nimport React, { Component } from \"react\";\nimport CollectionsOverview from \"../../components/CollectionsOverview/CollectionsOverview\";\nimport { Route } from \"react-router-dom\";\nimport Collection from \"../Collection/Collection\";\nimport { firestore, convertCollectionSnapShotToMap } from \"../../components/firbase/firebase\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport { connect } from \"react-redux\";\nimport WithSpinner from \"../../components/WithSpinner/WithSpinner\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionWithSpinner = WithSpinner(Collection);\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unSubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionSnapShotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewWithSpinner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionWithSpinner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapsToDispatch = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapsToDispatch)(ShopPage);","map":{"version":3,"sources":["/Users/apple/Documents/work_place/react/clothing-ecommerce/src/pages/ShopPage/ShopPage.jsx"],"names":["React","Component","CollectionsOverview","Route","Collection","firestore","convertCollectionSnapShotToMap","updateCollections","connect","WithSpinner","CollectionsOverviewWithSpinner","CollectionWithSpinner","ShopPage","state","loading","unSubscribeFromSnapShot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapsToDispatch","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SACEC,SADF,EAEEC,8BAFF,QAGO,mCAHP;AAIA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACP,mBAAD,CAAlD;AACA,MAAMS,qBAAqB,GAAGF,WAAW,CAACL,UAAD,CAAzC;;AAEA,MAAMQ,QAAN,SAAuBX,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BY,KAD+B,GACvB;AACNC,MAAAA,OAAO,EAAE;AADH,KADuB;AAAA,SAI/BC,uBAJ+B,GAIL,IAJK;AAAA;;AAM/BC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AACA,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,cAAc,GAAGhB,8BAA8B,CAACe,QAAD,CAArD;AACAd,MAAAA,iBAAiB,CAACe,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AACZT,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAND;AAOD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,EAFtB;AAGE,MAAA,SAAS,EAAEhB,8BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEe,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,SAAS,EAAEf,qBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAaD;;AAlC8B;;AAqCjC,MAAMgB,cAAc,GAAGC,QAAQ,KAAK;AAClCrB,EAAAA,iBAAiB,EAAEe,cAAc,IAC/BM,QAAQ,CAACrB,iBAAiB,CAACe,cAAD,CAAlB;AAFwB,CAAL,CAA/B;;AAKA,eAAed,OAAO,CAAC,IAAD,EAAOmB,cAAP,CAAP,CAA8Bf,QAA9B,CAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport CollectionsOverview from \"../../components/CollectionsOverview/CollectionsOverview\";\nimport { Route } from \"react-router-dom\";\nimport Collection from \"../Collection/Collection\";\nimport {\n  firestore,\n  convertCollectionSnapShotToMap\n} from \"../../components/firbase/firebase\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport { connect } from \"react-redux\";\nimport WithSpinner from \"../../components/WithSpinner/WithSpinner\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionWithSpinner = WithSpinner(Collection);\n\nclass ShopPage extends Component {\n  state = {\n    loading: true\n  };\n  unSubscribeFromSnapShot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionSnapShotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionsOverviewWithSpinner}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionWithSpinner}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapsToDispatch = dispatch => ({\n  updateCollections: collectionsMap =>\n    dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapsToDispatch)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}