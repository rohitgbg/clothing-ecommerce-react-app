{"ast":null,"code":"import { takeEvery } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionSnapShotToMap } from \"../../components/firbase/firebase\";\nimport { fetchCollectionSuccess, fetchCollectionFailure } from \"./shop.actions\"; //takeEvery - listens every actions\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n  const collectionRef = firestore.collection(\"collections\");\n  collectionRef.get().then(async snapshot => {\n    const collectionsMap = convertCollectionSnapShotToMap(snapshot);\n  }).catch(error => {});\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/apple/Documents/work_place/react/clothing-ecommerce/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionTypes","firestore","convertCollectionSnapShotToMap","fetchCollectionSuccess","fetchCollectionFailure","fetchCollectionsAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","catch","error","fetchCollectionsStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,8BAFF,QAGO,mCAHP;AAIA,SAASC,sBAAT,EAAiCC,sBAAjC,QAA+D,gBAA/D,C,CAEA;;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AAEAD,EAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQ,MAAMC,QAAN,IAAkB;AACtB,UAAMC,cAAc,GAAGX,8BAA8B,CAACU,QAAD,CAArD;AACD,GAJH,EAKGE,KALH,CAKSC,KAAK,IAAI,CAAE,CALpB;AAMD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMjB,SAAS,CACbC,eAAe,CAACiB,sBADH,EAEbZ,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport {\n  firestore,\n  convertCollectionSnapShotToMap\n} from \"../../components/firbase/firebase\";\nimport { fetchCollectionSuccess, fetchCollectionFailure } from \"./shop.actions\";\n\n//takeEvery - listens every actions\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n\n  const collectionRef = firestore.collection(\"collections\");\n\n  collectionRef\n    .get()\n    .then(async snapshot => {\n      const collectionsMap = convertCollectionSnapShotToMap(snapshot);\n    })\n    .catch(error => {});\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTION_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}