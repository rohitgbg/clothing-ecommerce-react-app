{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/work_place/react/clothing-ecommerce/src/pages/ShopPage/ShopPage.jsx\";\nimport React, { Component } from \"react\";\nimport CollectionsOverview from \"../../components/CollectionsOverview/CollectionsOverview\";\nimport { Route } from \"react-router-dom\";\nimport Collection from \"../Collection/Collection\";\nimport { firestore, convertCollectionSnapShotToMap } from \"../../components/firbase/firebase\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport { connect } from \"react-redux\";\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unSubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionSnapShotToMap(snapshot);\n      console.log(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: Collection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapsToDispatch = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapsToDispatch)(ShopPage);","map":{"version":3,"sources":["/Users/apple/Documents/work_place/react/clothing-ecommerce/src/pages/ShopPage/ShopPage.jsx"],"names":["React","Component","CollectionsOverview","Route","Collection","firestore","convertCollectionSnapShotToMap","updateCollections","connect","ShopPage","unSubscribeFromSnapShot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionsMap","console","log","render","match","props","path","mapsToDispatch","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SACEC,SADF,EAEEC,8BAFF,QAGO,mCAHP;AAIA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BS,uBAD+B,GACL,IADK;AAAA;;AAG/BC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,cAAc,GAAGV,8BAA8B,CAACS,QAAD,CAArD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACD,KAHD;AAID;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEpB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEkB,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAElB,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AApB8B;;AAuBjC,MAAMmB,cAAc,GAAGC,QAAQ,KAAK;AAClCjB,EAAAA,iBAAiB,EAAES,cAAc,IAC/BQ,QAAQ,CAACjB,iBAAiB,CAACS,cAAD,CAAlB;AAFwB,CAAL,CAA/B;;AAKA,eAAeR,OAAO,CAAC,IAAD,EAAOe,cAAP,CAAP,CAA8Bd,QAA9B,CAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport CollectionsOverview from \"../../components/CollectionsOverview/CollectionsOverview\";\nimport { Route } from \"react-router-dom\";\nimport Collection from \"../Collection/Collection\";\nimport {\n  firestore,\n  convertCollectionSnapShotToMap\n} from \"../../components/firbase/firebase\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport { connect } from \"react-redux\";\n\nclass ShopPage extends Component {\n  unSubscribeFromSnapShot = null;\n\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collections\");\n\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionSnapShotToMap(snapshot);\n      console.log(collectionsMap);\n    });\n  }\n\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route path={`${match.path}/:collectionId`} component={Collection} />\n      </div>\n    );\n  }\n}\n\nconst mapsToDispatch = dispatch => ({\n  updateCollections: collectionsMap =>\n    dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapsToDispatch)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}