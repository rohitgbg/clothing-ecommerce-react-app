{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/work_place/react/clothing-ecommerce/src/pages/ShopPage/ShopPage.jsx\";\nimport React, { Component } from \"react\";\nimport CollectionsOverview from \"../../components/CollectionsOverview/CollectionsOverview\";\nimport { Route } from \"react-router-dom\";\nimport Collection from \"../Collection/Collection\";\nimport { fetchCollectionStartAsync } from \"../../redux/shop/shop.actions\";\nimport { connect } from \"react-redux\";\nimport WithSpinner from \"../../components/WithSpinner/WithSpinner\";\nimport { createStructuredSelector } from \"reselect\"; // import {\n//   selectShopCollectionsisFetching,\n//   selectShopCollectionsisLoading\n// } from \"../../redux/shop/shop.selectors\";\n\nimport CollectionsOverviewContainer from \"../../components/CollectionsOverview/CollectionOverContainer\";\nimport CollectionContainer from \"../Collection/CollectionContainer\"; // const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n// const CollectionWithSpinner = WithSpinner(Collection);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const {\n      fetchCollectionStartAsync\n    } = this.props;\n    fetchCollectionStartAsync(); // const { updateCollections } = this.props;\n    // const collectionRef = firestore.collection(\"collections\");\n    // fetch(\n    //   \"https://firestore.googleapis.com/v1/projects/clothing-ecommerce-adf0b/databases/(default)/documents/collections\"\n    // )\n    //   .then(response => response.json())\n    //   .then(collections => console.log(\"collections\", collections));\n    // normal api fetch\n    // collectionRef.get().then(async snapshot => {\n    //   const collectionsMap = convertCollectionSnapShotToMap(snapshot);\n    //   updateCollections(collectionsMap);\n    //   this.setState({\n    //     loading: false\n    //   });\n    // });\n    // live data\n    // collectionRef.onSnapshot(async snapshot => {\n    //   const collectionsMap = convertCollectionSnapShotToMap(snapshot);\n    //   updateCollections(collectionsMap);\n    //   this.setState({\n    //     loading: false\n    //   });\n    // });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}` // component={CollectionsOverview}\n      // render={props => (\n      //   <CollectionsOverviewWithSpinner\n      //     isLoading={isCollectionFetching}\n      //     {...props}\n      //   />\n      // )}\n      ,\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId` // component={Collection}\n      // render={props => (\n      //   <CollectionWithSpinner\n      //     isLoading={!isCollectionLoading}\n      //     {...props}\n      //   />\n      // )}\n      ,\n      component: CollectionContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n} // const mapsStateToProps = createStructuredSelector({\n//   isCollectionFetching: selectShopCollectionsisFetching,\n//   isCollectionLoading: selectShopCollectionsisLoading\n// });\n\n\nconst mapsToDispatch = dispatch => ({\n  fetchCollectionStartAsync: () => dispatch(fetchCollectionStartAsync())\n});\n\nexport default connect(null, mapsToDispatch)(ShopPage);","map":{"version":3,"sources":["/Users/apple/Documents/work_place/react/clothing-ecommerce/src/pages/ShopPage/ShopPage.jsx"],"names":["React","Component","CollectionsOverview","Route","Collection","fetchCollectionStartAsync","connect","WithSpinner","createStructuredSelector","CollectionsOverviewContainer","CollectionContainer","ShopPage","componentDidMount","props","render","match","path","mapsToDispatch","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,SAASC,yBAAT,QAA0C,+BAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC,C,CACA;AACA;AACA;AACA;;AACA,OAAOC,4BAAP,MAAyC,8DAAzC;AACA,OAAOC,mBAAP,MAAgC,mCAAhC,C,CAEA;AACA;;AAEA,MAAMC,QAAN,SAAuBV,SAAvB,CAAiC;AAC/BW,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEP,MAAAA;AAAF,QAAgC,KAAKQ,KAA3C;AACAR,IAAAA,yBAAyB,GAFP,CAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAFtB,CAGE;AACA;AACA;AACA;AACA;AACA;AACA;AATF;AAWE,MAAA,SAAS,EAAEP,4BAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAcE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEM,KAAK,CAACC,IAAK,gBADtB,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AARF;AASE,MAAA,SAAS,EAAEN,mBATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CADF;AA4BD;;AA5D8B,C,CA+DjC;AACA;AACA;AACA;;;AAEA,MAAMO,cAAc,GAAGC,QAAQ,KAAK;AAClCb,EAAAA,yBAAyB,EAAE,MAAMa,QAAQ,CAACb,yBAAyB,EAA1B;AADP,CAAL,CAA/B;;AAIA,eAAeC,OAAO,CAAC,IAAD,EAAOW,cAAP,CAAP,CAA8BN,QAA9B,CAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport CollectionsOverview from \"../../components/CollectionsOverview/CollectionsOverview\";\nimport { Route } from \"react-router-dom\";\nimport Collection from \"../Collection/Collection\";\n\nimport { fetchCollectionStartAsync } from \"../../redux/shop/shop.actions\";\nimport { connect } from \"react-redux\";\nimport WithSpinner from \"../../components/WithSpinner/WithSpinner\";\nimport { createStructuredSelector } from \"reselect\";\n// import {\n//   selectShopCollectionsisFetching,\n//   selectShopCollectionsisLoading\n// } from \"../../redux/shop/shop.selectors\";\nimport CollectionsOverviewContainer from \"../../components/CollectionsOverview/CollectionOverContainer\";\nimport CollectionContainer from \"../Collection/CollectionContainer\";\n\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n// const CollectionWithSpinner = WithSpinner(Collection);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const { fetchCollectionStartAsync } = this.props;\n    fetchCollectionStartAsync();\n    // const { updateCollections } = this.props;\n    // const collectionRef = firestore.collection(\"collections\");\n    // fetch(\n    //   \"https://firestore.googleapis.com/v1/projects/clothing-ecommerce-adf0b/databases/(default)/documents/collections\"\n    // )\n    //   .then(response => response.json())\n    //   .then(collections => console.log(\"collections\", collections));\n    // normal api fetch\n    // collectionRef.get().then(async snapshot => {\n    //   const collectionsMap = convertCollectionSnapShotToMap(snapshot);\n    //   updateCollections(collectionsMap);\n    //   this.setState({\n    //     loading: false\n    //   });\n    // });\n    // live data\n    // collectionRef.onSnapshot(async snapshot => {\n    //   const collectionsMap = convertCollectionSnapShotToMap(snapshot);\n    //   updateCollections(collectionsMap);\n    //   this.setState({\n    //     loading: false\n    //   });\n    // });\n  }\n\n  render() {\n    const { match } = this.props;\n\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          // component={CollectionsOverview}\n          // render={props => (\n          //   <CollectionsOverviewWithSpinner\n          //     isLoading={isCollectionFetching}\n          //     {...props}\n          //   />\n          // )}\n\n          component={CollectionsOverviewContainer}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          // component={Collection}\n          // render={props => (\n          //   <CollectionWithSpinner\n          //     isLoading={!isCollectionLoading}\n          //     {...props}\n          //   />\n          // )}\n          component={CollectionContainer}\n        />\n      </div>\n    );\n  }\n}\n\n// const mapsStateToProps = createStructuredSelector({\n//   isCollectionFetching: selectShopCollectionsisFetching,\n//   isCollectionLoading: selectShopCollectionsisLoading\n// });\n\nconst mapsToDispatch = dispatch => ({\n  fetchCollectionStartAsync: () => dispatch(fetchCollectionStartAsync())\n});\n\nexport default connect(null, mapsToDispatch)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}